#N canvas -8 -8 1920 992 10;
#X obj 180 80 pbank;
#X obj 180 120 print data;
#X obj 150 30 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X msg 180 30 read data/test.txt;
#X obj 30 120 unpack f f f f f f f f;
#X floatatom 30 150 5 0 0 0 - - -, f 5;
#X floatatom 50 180 5 0 0 0 - - -, f 5;
#X floatatom 70 150 5 0 0 0 - - -, f 5;
#X msg 300 30 recall;
#X msg 409 32 clear;
#X msg 421 87 write text-object-help.txt;
#X obj 428 119 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 408 262 t b p;
#X obj 408 311 text get -s text t;
#X msg 409 286 0;
#X obj 408 361 print;
#X obj 408 336 list trim;
#X text 449 113 bang to output a pointer to a scalar (struct) containing
the text, f 35;
#X obj 408 171 text define -k text-help-1;
#A set 0 2 4 5 7 9 11 12;
#X msg 416 58 read test.txt;
#X obj 470 360 unpack f f f f f f f f;
#X floatatom 470 390 5 0 0 0 - - -, f 5;
#X floatatom 480 410 5 0 0 0 - - -, f 5;
#X floatatom 510 390 5 0 0 0 - - -, f 5;
#X floatatom 520 410 5 0 0 0 - - -, f 5;
#X floatatom 550 390 5 0 0 0 - - -, f 5;
#X floatatom 560 410 5 0 0 0 - - -, f 5;
#X floatatom 550 390 5 0 0 0 - - -, f 5;
#X floatatom 560 410 5 0 0 0 - - -, f 5;
#X floatatom 590 390 5 0 0 0 - - -, f 5;
#X floatatom 600 410 5 0 0 0 - - -, f 5;
#X text 620 360 Indexes 4 and 5 not unpacking?;
#X msg 1389 351 0 2 4 5 7 9 11;
#X msg 1423 378 0 2 3 5 7 8 10;
#X msg 1475 432 0 2 4 6 7 9 11;
#X msg 1450 405 0 1 3 5 7 8 10;
#X text 1491 351 Major (Ionian);
#X text 1523 375 Minor (Aeolian);
#X text 1575 432 Lydian;
#X msg 1515 461 0 2 4 6 8 10;
#X text 1551 404 Phrygian;
#X text 1602 460 Whole Tone;
#X obj 1360 749 prepend 0;
#X obj 1366 572 t l l;
#X obj 1436 599 list length;
#X obj 1420 811 s \$0-scale;
#X msg 1436 703 resize \$1;
#X text 1442 747 <-- this tells the array \$0-scale to fill the array
elements starting at element 0;
#X text 1507 702 <-- set the array size to the number of tones in the
scale octave.;
#X obj 1449 638 s \$0-scale_length;
#X obj 999 255 r \$0-scale_length;
#X floatatom 899 241 5 0 0 0 - - -, f 5;
#X obj 899 331 mod 7;
#X text 942 330 <-- [mod ] handles negative numbers differently than
[% ];
#X obj 974 374 div 7;
#X obj 899 274 t f f;
#X floatatom 1031 418 5 0 0 0 - - -, f 5;
#X obj 906 489 tabread \$0-scale;
#X floatatom 906 665 5 0 0 0 - - -, f 5;
#X msg 1389 251 options Major Minor Phrygian Lydian Whole-Tone;
#X obj 1393 318 sel 0 1 2 3 4;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-scale 7 float 3 black black;
#A 0 0 2 4 5 7 9 11;
#X coords 0 12 7 0 200 140 1;
#X restore 984 733 graph;
#X text 966 863 0;
#X text 962 725 12;
#X floatatom 862 392 5 0 0 0 - - -, f 5;
#X obj 974 427 * 12;
#X obj 906 563 +;
#X obj 906 605 + 48;
#X obj 1390 283 route bang;
#X text 1466 282 <-- this is just to avoid error messages \, because
[popup] bangs on load.;
#X text 1890 873 .mmb;
#X text 1021 370 <-- division that discards the remainder. This tells
you what octave to use.;
#X text 950 603 <-- offset;
#X text 710 30 Idea: Write a Python script that generates a text file.
Each line in the text file will be a list of MIDI notes [22 \, 108]
where only notes of a certain key will exist. Line number in the text
file will correspond to different keys (Line 1 = C major \, line 2
= D major \, etc.). List can be parsed in Pd and unpacked if needed
\, or a random note can be selected by accessing a random index of
the list.;
#X text 710 140 Note weights? One idea is to build weights into the
Python script - have the root note or notes towards the middle of [22
\, 108] occur 2x/4x more than other notes to increase the chance that
they are selected by random index.;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 4 2 7 0;
#X connect 8 0 0 0;
#X connect 9 0 18 0;
#X connect 10 0 18 0;
#X connect 11 0 18 0;
#X connect 12 0 14 0;
#X connect 12 1 13 3;
#X connect 13 0 16 0;
#X connect 14 0 13 0;
#X connect 16 0 15 0;
#X connect 16 0 20 0;
#X connect 18 0 12 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 1 22 0;
#X connect 20 2 23 0;
#X connect 20 3 24 0;
#X connect 20 4 25 0;
#X connect 20 5 26 0;
#X connect 20 6 29 0;
#X connect 20 7 30 0;
#X connect 32 0 43 0;
#X connect 33 0 43 0;
#X connect 34 0 43 0;
#X connect 35 0 43 0;
#X connect 39 0 43 0;
#X connect 42 0 45 0;
#X connect 43 0 42 0;
#X connect 43 1 44 0;
#X connect 44 0 46 0;
#X connect 44 0 49 0;
#X connect 46 0 45 0;
#X connect 50 0 52 1;
#X connect 50 0 54 1;
#X connect 51 0 55 0;
#X connect 52 0 57 0;
#X connect 52 0 64 0;
#X connect 54 0 56 0;
#X connect 54 0 65 0;
#X connect 55 0 52 0;
#X connect 55 1 54 0;
#X connect 57 0 66 0;
#X connect 60 0 32 0;
#X connect 60 1 33 0;
#X connect 60 2 35 0;
#X connect 60 3 34 0;
#X connect 60 4 39 0;
#X connect 65 0 66 1;
#X connect 66 0 67 0;
#X connect 67 0 58 0;
#X connect 68 1 60 0;
